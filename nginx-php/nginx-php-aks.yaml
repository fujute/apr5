apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    tier: backend
data:
  config : |
    server {
      index index.php index.html;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /code;

      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass php:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: my-code
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
parameters:
  skuName: Standard_LRS

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-code
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: my-code
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
      tier: backend
  template:
    metadata:
      labels:
        app: php
        tier: backend
    spec:
      volumes:
      - name: my-code
        persistentVolumeClaim:
          claimName: my-code
      containers:
      - name: php
        image: php:7-fpm
        envFrom:
          - secretRef:
              name: mysql-creds
        volumeMounts:
        - name: my-code
          mountPath: /code
      initContainers:
      - name: install
        image: busybox
        volumeMounts:
        - name: my-code
          mountPath: /code
        command:
        - wget
        - "-O"
        - "/code/index.php"
        -  https://raw.githubusercontent.com/fujute/apr5/main/nginx-php/index.php

---
apiVersion: v1
kind: Service
metadata:
  name: php
spec:
  selector:
    app: php
  ports:
  - protocol: TCP
    port: 9000
  type: ClusterIP
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      tier: backend
  template:
    metadata:
      labels:
        app: nginx
        tier: backend
    spec:
      volumes:
      - name: my-code
        persistentVolumeClaim:
          claimName: my-code
      - name: config
        configMap:
          name: nginx-config
          items:
          - key: config
            path: site.conf
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
        volumeMounts:
        - name: my-code
          mountPath: /code
        - name: config
          mountPath: /etc/nginx/conf.d

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
  type: LoadBalancer		  
  
